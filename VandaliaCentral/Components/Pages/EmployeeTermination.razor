@page "/employeetermination"
@using VandaliaCentral.Models
@using VandaliaCentral.Services
@inject EmailService EmailService

<h3>Employee Termination Form</h3>

<EditForm Model="@formModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-2">
        <label>Employee Name:</label>
        <InputText @bind-Value="formModel.EmployeeName" class="form-control" />
    </div>

    <div class="mb-2">
        <label>Termination Date:</label>
        <InputDate @bind-Value="formModel.TerminationDate" class="form-control" />
    </div>

    <div class="mb-2">
        <label>Reason:</label>
        <InputTextArea @bind-Value="formModel.Reason" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary mt-2">Submit</button>
</EditForm>

@if (success)
{
    <p class="text-success mt-2">Form submitted and emailed successfully.</p>
}

@code {
    private TerminationFormModel formModel = new();
    private bool success = false;

    private async Task HandleValidSubmit()
    {
        try
        {
            var pdfBytes = PDFTemplateFiller.Fill(formModel);
            await EmailService.SendTerminationFormAsync(pdfBytes, formModel.EmployeeName);
            success = true;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"PDF or Email Error: {ex.Message}");

            if (ex.InnerException != null)
                Console.WriteLine($"Inner Exception: {ex.InnerException.Message}");
        }
    }
}