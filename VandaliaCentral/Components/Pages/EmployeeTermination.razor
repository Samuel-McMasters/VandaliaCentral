@page "/employeetermination"
@using VandaliaCentral.Models
@using VandaliaCentral.Services
@inject EmailService EmailService

<h3>Employee Termination Form</h3>

<EditForm Model="@formModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <!-- Employee Information Block -->
    <div class="row py-5">
        <div class="row">
            <div class="col-12 col-md-3  d-flex flex-column mb-2">
                <label>Employee Name:</label>
                <InputText @bind-Value="formModel.EmployeeName" class="form-control" />
            </div>
            <div class="col-12 col-md-3 mb-2">
                <label>Employee #:</label>
                <InputText @bind-Value="formModel.EmployeeNumber" class="form-control" />
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-md-3 mb-2">
                <label>Location:</label>
                <InputText @bind-Value="formModel.Location" class="form-control" />
            </div>
            <div class="col-12 col-md-3 mb-2">
                <label>Last Date of Employment:</label>
                <InputDate @bind-Value="formModel.LastDateOfEmployment" class="form-control" />
            </div>
        </div>
    </div>
    

    <!-- Items To Be Collected Block -->
    <div class="py-5">
        <h5>Items to be collected (please mark items returned; leave BLANK if not applicable)</h5>
        <div class="row">
            <div class="col-12 col-md-3 mb-2">
                <InputCheckbox @bind-Value="formModel.Cellphone" class="form-check-input" />
                <label class="form-check-label">Cellphone</label>
            </div>
        </div>
    </div>
    
    
    

    <!-- Access To Be Terminated Block -->
    

    <button type="submit" class="btn btn-primary mt-2">Submit</button>
</EditForm>

@if (success)
{
    <p class="text-success mt-2">Form submitted and emailed successfully.</p>
}

@code {
    private TerminationFormModel formModel = new();
    private bool success = false;

    private async Task HandleValidSubmit()
    {
        try
        {
            var pdfBytes = PDFTemplateFiller.Fill(formModel);
            await EmailService.SendTerminationFormAsync(pdfBytes, formModel.EmployeeName);
            success = true;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"PDF or Email Error: {ex.Message}");

            if (ex.InnerException != null)
                Console.WriteLine($"Inner Exception: {ex.InnerException.Message}");
        }
    }
}